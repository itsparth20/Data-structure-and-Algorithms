//Parth Patel - ppatel.it20@gmail.com
B. SplitArrayToEvenlyFaster - Faster

	Test Cases - 
		
		1.
		Input: 1 1 1 2 2 3
		Expected Output: [[2, 2, 1], [3, 1, 1]]
			
		2. 
		Input: 5 6 11
		Expected Output: [[6, 5], [11]]
		
		3. 
		Input: 4 5 3 11
		Expected Output: [[5, 4, 3], [11]]
		
		4. 
		Input: 37 28 16 44 36 37 43 50 22 13 28 41 10 14 27 41 27 23 37 12 19 18 30 33 31 13 24 18 36 30 3 23 9 20
		Expected Output: [[44, 41, 37, 36, 31, 30, 28, 27, 24, 23, 19, 18, 16, 13, 10, 9, 41], [50, 37, 37, 36, 33, 30, 28, 27, 23, 22, 20, 18, 14, 13, 12, 3, 43]]
		Output: [[44, 43, 41, 37, 36, 31, 30, 28, 27, 24, 23, 19, 18, 16, 13, 10, 9], [50, 41, 37, 37, 36, 33, 30, 28, 27, 23, 22, 20, 18, 14, 13, 12, 3]]
		Reason: Here two list difference is 5. But we can achieve difference 1 by swapping 41 and 43 or swapping any value who has difference between two value is 2. 
		
	Description: 
		For this algorithm, I am sorting the list. Then add values to two lists base on list weight. At the end returning that list. 
		
	Complexity:
		O(NlogN): We are sorting array and it takes NLogN time.